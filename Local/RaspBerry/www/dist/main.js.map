{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dados-Service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-header\\\">Pesquisa</div>\\n            <div class=\\\"card-body\\\">\\n                <div class=\\\"form-row\\\">\\n                    <div class=\\\"col-md-4\\\">\\n                        <label>Base\\n                            <span *ngIf=\\\"Base\\\" style=\\\"margin-left: 10px;\\\"> Tamanho: {{Base.sizeOnDisk}}</span>\\n                        </label>\\n                        <select [(ngModel)]=\\\"Base\\\" class=\\\"form-control\\\" (click)=\\\"AtuColecoes()\\\" name=\\\"base\\\">\\n                            <option *ngFor=\\\"let item of ListaBases\\\" [ngValue]=\\\"item\\\">{{item.name}}</option>\\n                        </select>\\n                    </div>\\n                    <div class=\\\"col-md-4\\\" *ngIf=\\\"Base\\\">\\n                        <label>Coleção</label>\\n                        <select [(ngModel)]=\\\"Colecao\\\" class=\\\"form-control\\\" (click)=\\\"AtuMedicoes()\\\">\\n                            <option *ngFor=\\\"let item of ListaColecoes\\\" [ngValue]=\\\"item\\\">{{item.name}}</option>\\n                        </select>\\n                    </div>\\n                    <div class=\\\"col-md-4\\\" *ngIf=\\\"Colecao\\\">\\n                        <label>Coleção</label>\\n                        <select [(ngModel)]=\\\"Medicao\\\" class=\\\"form-control\\\">\\n                            <option *ngFor=\\\"let item of ListaMedicoes\\\" [ngValue]=\\\"item\\\">{{item._id}}</option>\\n                        </select>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\" *ngIf=\\\"Medicao\\\">\\n                    <div class=\\\"col-md-6\\\">\\n                        <dl>\\n                            <dt>Início</dt>\\n                            <dd>{{Medicao.De | date:'dd/MM/yyyy'}}</dd>\\n                            <dt>Término</dt>\\n                            <dd>{{Medicao.Ate | date:'dd/MM/yyyy'}}</dd>\\n                            <dt>Leituras</dt>\\n                            <dd>{{Medicao.Leituras}}</dd>\\n                        </dl>\\n                    </div>\\n                    <div class=\\\"col-md-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label>De:</label>\\n                            <input type=\\\"date\\\" [(ngModel)]=\\\"De\\\" class=\\\"form-control\\\">\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label>De:</label>\\n                            <input type=\\\"date\\\" [(ngModel)]=\\\"Ate\\\" class=\\\"form-control\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"card-footer text-right\\\">\\n                <button class=\\\"btn btn-primary\\\" (click)=\\\"GeraGrafico()\\\">Gráfico</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div *ngIf=\\\"showGrafico\\\">\\n    <p-chart type=\\\"line\\\" [data]=\\\"Grafico\\\"></p-chart>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { DadosService } from './dados-Service';\nimport { BaseType, ColecaoType, MedicaoType } from './dados.Types';\nimport { ChartModule } from 'primeng/primeng';\n\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\n// tslint:disable-next-line:no-unused-expression\n\nexport class AppComponent implements OnInit {\n    ListaBases: BaseType[] = [];\n    ListaColecoes: ColecaoType[] = [];\n    ListaMedicoes: MedicaoType[] = [];\n    Base: BaseType;\n    Colecao: ColecaoType;\n    Medicao: MedicaoType;\n    De: Date;\n    Ate: Date;\n    Grafico: any;\n    showGrafico = false;\n\n\n    constructor(private dados: DadosService) { }\n    ngOnInit(): void {\n        this.dados.databases().subscribe(p => this.ListaBases = p);\n    }\n\n    AtuColecoes(): void {\n        this.Colecao = null;\n        this.Medicao = null;\n        this.showGrafico = false;\n        this.ListaColecoes = [];\n\n        if (this.Base) {\n            const prm = { base: this.Base.name };\n            this.dados.collections(prm).subscribe(p => this.ListaColecoes = p);\n        } else {\n            this.ListaColecoes = [];\n        }\n    }\n\n    AtuMedicoes(): void {\n        this.Medicao = null;\n        this.showGrafico = false;\n        this.ListaMedicoes = [];\n        if (this.Colecao) {\n            const prm = { base: this.Base.name, colecao: this.Colecao.name };\n            this.dados.medicao(prm).subscribe(p => this.ListaMedicoes = p);\n        }\n    }\n\n    GeraGrafico(): void {\n        this.showGrafico = false;\n        const prm = {\n            base: this.Base.name,\n            colecao: this.Colecao.name,\n            medicao: this.Medicao._id,\n            de: this.De,\n            ate: this.Ate\n        };\n\n\n        this.Grafico = {\n            labels: [],\n            datasets: [\n                {\n                    label: this.Medicao._id,\n                    data: [],\n                    fill: false\n                }\n            ]\n        };\n\n\n        this.dados.valores(prm).subscribe(p => {\n            p.forEach(vlr => {\n                // labels.push(p.Hora);\n                // valores.push(p.Valor);\n                this.Grafico.labels.push(vlr.Hora);\n                this.Grafico.datasets[0].data.push(vlr.Valor);\n                this.showGrafico = true;\n            });\n            // this.Grafico.datasets[0].data = valores;\n        });\n\n\n\n        /*\n                this.data = {\n                    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                    datasets: [\n                        {\n                            label: 'First Dataset',\n                            data: [65, 59, 80, 81, 56, 55, 40]\n                        }\n                    ]\n                };\n        */\n    }\n\n\n\n\n}\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LOCALE_ID, NgModule } from '@angular/core';\nimport { registerLocaleData } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\n\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ChartModule, SharedModule } from 'primeng/primeng';\n\nimport localePt from '@angular/common/locales/pt';\nregisterLocaleData(localePt);\n\nimport { DadosService } from './dados-Service';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    FormsModule, ReactiveFormsModule,\n    BrowserModule, BrowserAnimationsModule, HttpClientModule,\n    ChartModule, SharedModule\n\n  ],\n  providers: [\n    { provide: LOCALE_ID, useValue: 'pt' }, DadosService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { BaseType, ColecaoType, MedicaoType } from './dados.Types';\r\n\r\nconst httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\r\n\r\n\r\n@Injectable()\r\nexport class DadosService {\r\n    constructor(\r\n        private http: HttpClient\r\n    ) { }\r\n\r\n    private pathUrl = 'dados';\r\n\r\n    databases(): Observable<BaseType[]> {\r\n        const url = `${this.pathUrl}/databases`;\r\n        return this.http.get<BaseType[]>(url);\r\n    }\r\n\r\n    collections(prm: any): Observable<ColecaoType[]> {\r\n        const url = `${this.pathUrl}/collections`;\r\n        return this.http.post<ColecaoType[]>(url, prm, httpOptions);\r\n    }\r\n\r\n    medicao(prm: any): Observable<MedicaoType[]> {\r\n        const url = `${this.pathUrl}/medicao`;\r\n        return this.http.post<MedicaoType[]>(url, prm, httpOptions);\r\n    }\r\n\r\n    valores(prm: any): Observable<any[]> {\r\n        const url = `${this.pathUrl}/valores`;\r\n        return this.http.post<any[]>(url, prm, httpOptions);\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}